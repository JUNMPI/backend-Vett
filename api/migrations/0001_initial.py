# Generated by Django 5.2.1 on 2025-05-19 08:23

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultorio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('ubicacion', models.CharField(max_length=255)),
                ('disponible', models.CharField(choices=[('Abierto', 'Abierto'), ('Cerrado', 'Cerrado')], default='Abierto', max_length=10)),
            ],
            options={
                'verbose_name': 'Consultorio',
                'verbose_name_plural': 'Consultorios',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], default='Activo', max_length=10)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='HistorialClinico',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('numero_historia', models.PositiveIntegerField(editable=False, unique=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Historial Clínico',
                'verbose_name_plural': 'Historias Clínicas',
            },
        ),
        migrations.CreateModel(
            name='Mascota',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombreMascota', models.CharField(max_length=100)),
                ('especie', models.CharField(max_length=100)),
                ('raza', models.CharField(max_length=100)),
                ('fechaNacimiento', models.DateField()),
                ('genero', models.CharField(choices=[('Hembra', 'Hembra'), ('Macho', 'Macho')], max_length=10)),
                ('peso', models.DecimalField(decimal_places=2, max_digits=5)),
                ('color', models.CharField(max_length=50)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], default='Activo', max_length=10)),
            ],
            options={
                'ordering': ['nombreMascota'],
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('proveedor', models.CharField(max_length=100)),
                ('tipo', models.CharField(choices=[('medicamento', 'Medicamento'), ('vacuna', 'Vacuna'), ('higiene', 'Higiene y cuidado'), ('alimento', 'Alimento y suplemento'), ('venta', 'Producto para venta directa')], max_length=20)),
                ('subtipo', models.CharField(blank=True, max_length=100, null=True)),
                ('stock', models.PositiveIntegerField()),
                ('precio_venta', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_vencimiento', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], default='Activo', max_length=10)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Responsable',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('telefono', models.CharField(max_length=20)),
                ('direccion', models.CharField(max_length=255)),
                ('ciudad', models.CharField(max_length=100)),
                ('documento', models.CharField(max_length=20)),
                ('emergencia', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['nombres'],
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], default='Activo', max_length=10)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=50)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], default='Activo', max_length=10)),
            ],
            options={
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='AtencionMedica',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('motivo', models.CharField(max_length=255)),
                ('diagnostico', models.TextField()),
                ('tratamiento', models.TextField()),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('veterinario', models.CharField(max_length=100)),
                ('historial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atenciones', to='api.historialclinico')),
            ],
            options={
                'verbose_name': 'Atención Médica',
                'verbose_name_plural': 'Atenciones Médicas',
                'ordering': ['-fecha'],
            },
        ),
        migrations.AddField(
            model_name='historialclinico',
            name='mascota',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='historial_clinico', to='api.mascota'),
        ),
        migrations.AddField(
            model_name='mascota',
            name='responsable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mascotas', to='api.responsable'),
        ),
        migrations.AddField(
            model_name='responsable',
            name='tipodocumento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsables', to='api.tipodocumento'),
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('rol', models.CharField(choices=[('Administrador', 'Administrador'), ('Recepcionista', 'Recepcionista'), ('Veterinario', 'Veterinario'), ('Inventario', 'Inventario'), ('Responsable', 'Responsable')], default='Recepcionista', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, related_name='usuario_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuario_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['email'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Trabajador',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('telefono', models.CharField(max_length=20)),
                ('documento', models.CharField(max_length=20)),
                ('tipodocumento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trabajadores', to='api.tipodocumento')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trabajador', to='api.usuario')),
            ],
            options={
                'ordering': ['nombres'],
            },
        ),
        migrations.AddField(
            model_name='responsable',
            name='usuario',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='responsable', to='api.usuario'),
        ),
        migrations.CreateModel(
            name='Vacunacion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre_vacuna', models.CharField(max_length=100)),
                ('fecha_aplicacion', models.DateField()),
                ('proxima_dosis', models.DateField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('veterinario', models.CharField(max_length=100)),
                ('historial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vacunas', to='api.historialclinico')),
            ],
            options={
                'verbose_name': 'Vacunación',
                'verbose_name_plural': 'Vacunaciones',
                'ordering': ['-fecha_aplicacion'],
            },
        ),
        migrations.CreateModel(
            name='Veterinario',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('especialidad', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.especialidad')),
                ('trabajador', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='veterinario', to='api.trabajador')),
            ],
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('completada', 'Completada'), ('cancelada', 'Cancelada'), ('reprogramada', 'Reprogramada')], default='pendiente', max_length=12)),
                ('notas', models.TextField(blank=True, null=True)),
                ('mascota', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='api.mascota')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='api.servicio')),
                ('veterinario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='api.veterinario')),
            ],
            options={
                'ordering': ['fecha', 'hora'],
            },
        ),
        migrations.CreateModel(
            name='DiaTrabajo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('LUNES', 'Lunes'), ('MARTES', 'Martes'), ('MIERCOLES', 'Miércoles'), ('JUEVES', 'Jueves'), ('VIERNES', 'Viernes'), ('SABADO', 'Sábado'), ('DOMINGO', 'Domingo')], max_length=10)),
                ('veterinario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dias_trabajo', to='api.veterinario')),
            ],
            options={
                'unique_together': {('veterinario', 'dia')},
            },
        ),
    ]

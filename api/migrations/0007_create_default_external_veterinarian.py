# Generated by Django 5.2.1 on 2025-09-08 04:47

from django.db import migrations
from django.contrib.auth.hashers import make_password


def create_default_external_veterinarian(apps, schema_editor):
    """
    Crea un veterinario 'Externo/Desconocido' por defecto para casos donde
    las mascotas vienen con vacunas aplicadas en cl√≠nicas externas
    """
    Usuario = apps.get_model('api', 'Usuario')
    TipoDocumento = apps.get_model('api', 'TipoDocumento')
    Especialidad = apps.get_model('api', 'Especialidad')
    Trabajador = apps.get_model('api', 'Trabajador')
    Veterinario = apps.get_model('api', 'Veterinario')

    # Verificar si ya existe el usuario
    if Usuario.objects.filter(email='externo@veterinaria.com').exists():
        return

    try:
        # Crear usuario para veterinario externo
        usuario_externo = Usuario.objects.create(
            email='externo@veterinaria.com',
            first_name='Veterinario',
            last_name='Externo/Desconocido',
            password=make_password('temp123'),
            rol='Veterinario'
        )

        # Obtener primer tipo documento y especialidad disponible
        tipo_doc = TipoDocumento.objects.first()
        especialidad = Especialidad.objects.first()
        
        if not tipo_doc:
            # Crear tipo documento por defecto si no existe
            tipo_doc = TipoDocumento.objects.create(
                nombre='EXTERNO',
                estado='activo'
            )
        
        if not especialidad:
            # Crear especialidad por defecto si no existe
            especialidad = Especialidad.objects.create(
                nombre='General',
                estado='activo'
            )

        # Crear trabajador
        trabajador_externo = Trabajador.objects.create(
            usuario=usuario_externo,
            nombres='Veterinario',
            apellidos='Externo/Desconocido',
            email='externo@veterinaria.com',
            telefono='000-0000000',
            tipodocumento=tipo_doc,
            documento='EXTERNO-001',
            estado='activo'
        )

        # Crear veterinario externo
        Veterinario.objects.create(
            trabajador=trabajador_externo,
            especialidad=especialidad
        )
        
        print("OK: Veterinario externo creado por defecto")
        
    except Exception as e:
        print(f"ERROR: Error creando veterinario externo: {e}")


def reverse_create_default_external_veterinarian(apps, schema_editor):
    """
    Elimina el veterinario externo por defecto
    """
    Usuario = apps.get_model('api', 'Usuario')
    
    try:
        usuario_externo = Usuario.objects.get(email='externo@veterinaria.com')
        usuario_externo.delete()  # Esto eliminar√° en cascada trabajador y veterinario
        print("üóëÔ∏è Veterinario externo eliminado")
    except Usuario.DoesNotExist:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0006_add_completado_estado_historial_vacunacion'),
    ]

    operations = [
        migrations.RunPython(
            create_default_external_veterinarian,
            reverse_create_default_external_veterinarian
        ),
    ]
